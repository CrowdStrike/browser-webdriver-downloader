name: CI

on:
  push:
    branches:
    - main
  pull_request:

jobs:
  lint-git:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        ref: ${{ github.event.pull_request.head.sha }}
    # grab default branch to calculate branch point to know when to stop linting
    - if: ${{ github.base_ref }}
      run: git branch ${{ github.base_ref }} origin/${{ github.base_ref }}
    - uses: actions/setup-node@v3

    - run: yarn install --frozen-lockfile
    - run: yarn lint:git

  lint:
    needs: lint-git

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3

    - run: yarn install --frozen-lockfile
    - run: yarn lint:md
    - run: yarn lint:js

  test:
    needs: lint

    strategy:
      matrix:
        os:
        - ubuntu-latest
        - macos-latest
        - windows-latest
        node:
        - 14

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node }}

    - run: yarn install --frozen-lockfile
    - run: yarn test

  test-no-edge:
    needs: lint

    strategy:
      matrix:
        os:
        - ubuntu-latest
        - macos-latest
        - windows-latest
        node:
        - 14

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node }}

    - run: sudo rm $(which microsoft-edge)
      if: matrix.os == 'ubuntu-latest'
    - run: rm '/Applications/Microsoft Edge.app/Contents/MacOS/Microsoft Edge'
      if: matrix.os == 'macos-latest'
    - run: path
      if: matrix.os == 'windows-latest'
      shell: cmd
    - run: echo %PATH%
      if: matrix.os == 'windows-latest'
    - run: Get-Command -Name msedge -CommandType Application -EA 0 | Remove-Item -Path {$_.Source} -Force -Confirm:$false -Verbose -WhatIf
      if: matrix.os == 'windows-latest'
      shell: powershell
    - run: Get-Command -Name msedge.exe -CommandType Application -EA 0 | Remove-Item -Path {$_.Source} -Force -Confirm:$false -Verbose -WhatIf
      if: matrix.os == 'windows-latest'
      shell: powershell
    - run: Get-Command -Name msedge -CommandType Application -EA 0 | Remove-Item -Path {$_.Source} -Force -Confirm:$false -Verbose
      if: matrix.os == 'windows-latest'
      shell: powershell
    - run: Get-Command -Name msedge.exe -CommandType Application -EA 0 | Remove-Item -Path {$_.Source} -Force -Confirm:$false -Verbose
      if: matrix.os == 'windows-latest'
      shell: powershell

    - run: yarn install --frozen-lockfile
    - run: yarn test --config .mocharc.no-edge.js

  ember-cli-update:
    needs: [test, test-no-edge]
    if: github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.head_ref }}
        token: ${{ secrets.GitHubToken }}
    - uses: actions/setup-node@v3

    - uses: kellyselden/ember-cli-update-action@v4
      with:
        autofix_command: yarn lint:js --fix && yarn lint:md -o
        ignore_to: true
